{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Input, Output, EventEmitter } from '@angular/core';\nlet ChildComponent = class ChildComponent {\n  set parentMessage(value) {\n    this._parentMessage = value;\n    this.message = value;\n  }\n  constructor(componentsService) {\n    this.componentsService = componentsService;\n    this._parentMessage = '';\n    this.onChildSendMessage = new EventEmitter();\n    this.message = '';\n  }\n  ngOnInit() {\n    this.parentMessageObservable$ = this.componentsService.parentMessageObservable$;\n    this.parentMessageObservable$.subscribe(msg => this.message = msg);\n  }\n  getParentMessageWithService() {\n    return this.componentsService.getParentMessageWithService();\n  }\n  setChildMessageWithOutput() {\n    this.onChildSendMessage.emit('child using output event');\n  }\n  setChildMessageWithService() {\n    this.componentsService.setChildMessageWithService('child using service');\n  }\n  setChildMessageWithObservable() {\n    this.componentsService.setChildMessage('child using observable');\n  }\n};\n__decorate([Input()], ChildComponent.prototype, \"parentMessage\", null);\n__decorate([Output()], ChildComponent.prototype, \"onChildSendMessage\", void 0);\nChildComponent = __decorate([Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})], ChildComponent);\nexport { ChildComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,KAAK,EAACC,MAAM,EAACC,YAAY,QAAQ,eAAe;AAQlD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAEhB,IAAIC,aAAa,CAACC,KAAU;IACnC,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC3B,IAAI,CAACE,OAAO,GAAGF,KAAK;EACtB;EAOAG,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAX7B,mBAAc,GAAW,EAAE;IAMnC,uBAAkB,GAAyB,IAAIP,YAAY,EAAU;IAErE,YAAO,GAAW,EAAE;EAGuC;EAE3DQ,QAAQ;IACN,IAAI,CAACC,wBAAwB,GAC3B,IAAI,CAACF,iBAAiB,CAACE,wBAAwB;IACjD,IAAI,CAACA,wBAAwB,CAACC,SAAS,CAAEC,GAAG,IAAM,IAAI,CAACN,OAAO,GAAGM,GAAI,CAAC;EACxE;EAEAC,2BAA2B;IACzB,OAAO,IAAI,CAACL,iBAAiB,CAACK,2BAA2B,EAAE;EAC7D;EAEAC,yBAAyB;IACvB,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,0BAA0B,CAAC;EAC1D;EAEAC,0BAA0B;IACxB,IAAI,CAACT,iBAAiB,CAACS,0BAA0B,CAAC,qBAAqB,CAAC;EAC1E;EAEAC,6BAA6B;IAC3B,IAAI,CAACV,iBAAiB,CAACW,eAAe,CAAC,wBAAwB,CAAC;EAClE;CACD;AAjCUC,YAARrB,KAAK,EAAE,mDAGP;AAEDqB,YADCpB,MAAM,EAAE,0DAC6D;AAP3DE,cAAc,eAL1BJ,SAAS,CAAC;EACTuB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWrB,cAAc,CAmC1B;SAnCYA,cAAc","names":["Component","Input","Output","EventEmitter","ChildComponent","parentMessage","value","_parentMessage","message","constructor","componentsService","ngOnInit","parentMessageObservable$","subscribe","msg","getParentMessageWithService","setChildMessageWithOutput","onChildSendMessage","emit","setChildMessageWithService","setChildMessageWithObservable","setChildMessage","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\crisl\\Desktop\\component_communication\\src\\app\\components\\child\\child.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Input,Output,EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent {\n  private _parentMessage: string = '';\n  @Input() set parentMessage(value: any) {\n    this._parentMessage = value;\n    this.message = value;\n  }\n  @Output()\n  onChildSendMessage: EventEmitter<string> = new EventEmitter<string>();\n\n  message: string = '';\n  parentMessageObservable$!: Observable<string>;\n\n  constructor(private componentsService: ComponentsService) {}\n\n  ngOnInit(): void {\n    this.parentMessageObservable$ =\n      this.componentsService.parentMessageObservable$;\n    this.parentMessageObservable$.subscribe((msg) => (this.message = msg));\n  }\n\n  getParentMessageWithService() {\n    return this.componentsService.getParentMessageWithService();\n  }\n\n  setChildMessageWithOutput() {\n    this.onChildSendMessage.emit('child using output event');\n  }\n\n  setChildMessageWithService() {\n    this.componentsService.setChildMessageWithService('child using service');\n  }\n\n  setChildMessageWithObservable() {\n    this.componentsService.setChildMessage('child using observable');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}