{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ComponentsService {\n  constructor() {\n    this._parentMessage = '';\n    this._childMessage = '';\n    this._childMessage$ = new Subject();\n    this.childMessageObservable$ = this._childMessage$.asObservable();\n    this._parentMessage$ = new Subject();\n    this.parentMessageObservable$ = this._parentMessage$.asObservable();\n  }\n  getParentMessageWithService() {\n    return this._parentMessage;\n  }\n  getChildMessageWithService() {\n    return this._childMessage;\n  }\n  setParentMessageWithService(message) {\n    this._parentMessage = message;\n  }\n  setChildMessageWithService(message) {\n    this._childMessage = message;\n  }\n  setChildMessage(message) {\n    this._childMessage$.next(message);\n  }\n  setParentMessage(message) {\n    this._parentMessage$.next(message);\n  }\n}\nComponentsService.ɵfac = function ComponentsService_Factory(t) {\n  return new (t || ComponentsService)();\n};\nComponentsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ComponentsService,\n  factory: ComponentsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAgDA,OAAO,QAAQ,MAAM;;AAIrE,OAAM,MAAOC,iBAAiB;EAS5BC;IARQ,mBAAc,GAAW,EAAE;IAC3B,kBAAa,GAAW,EAAE;IAC1B,mBAAc,GAAoB,IAAIF,OAAO,EAAE;IACvD,4BAAuB,GACrB,IAAI,CAACG,cAAe,CAACC,YAAY,EAAE;IAC7B,oBAAe,GAAoB,IAAIJ,OAAO,EAAE;IACxD,6BAAwB,GACtB,IAAI,CAACK,eAAgB,CAACD,YAAY,EAAE;EACvB;EAEfE,2BAA2B;IACzB,OAAO,IAAI,CAACC,cAAc;EAC5B;EACAC,0BAA0B;IACxB,OAAO,IAAI,CAACC,aAAa;EAC3B;EAEAC,2BAA2B,CAACC,OAAe;IACzC,IAAI,CAACJ,cAAc,GAAGI,OAAO;EAC/B;EACAC,0BAA0B,CAACD,OAAe;IACxC,IAAI,CAACF,aAAa,GAAGE,OAAO;EAC9B;EAEAE,eAAe,CAACF,OAAe;IAC7B,IAAI,CAACR,cAAc,CAACW,IAAI,CAACH,OAAO,CAAC;EACnC;EACAI,gBAAgB,CAACJ,OAAe;IAC9B,IAAI,CAACN,eAAe,CAACS,IAAI,CAACH,OAAO,CAAC;EACpC;;AA9BWV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAe,SAAjBf,iBAAiB;EAAAgB,YAFhB;AAAM","names":["Subject","ComponentsService","constructor","_childMessage$","asObservable","_parentMessage$","getParentMessageWithService","_parentMessage","getChildMessageWithService","_childMessage","setParentMessageWithService","message","setChildMessageWithService","setChildMessage","next","setParentMessage","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\crisl\\Desktop\\component_communication\\src\\app\\components\\components.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Observer, Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  private _parentMessage: string = '';\n  private _childMessage: string = '';\n  private _childMessage$: Subject<string> = new Subject();\n  childMessageObservable$: Observable<string> =\n    this._childMessage$!.asObservable();\n  private _parentMessage$: Subject<string> = new Subject();\n  parentMessageObservable$: Observable<string> =\n    this._parentMessage$!.asObservable();\n  constructor() {}\n\n  getParentMessageWithService() {\n    return this._parentMessage;\n  }\n  getChildMessageWithService(){\n    return this._childMessage\n  }\n\n  setParentMessageWithService(message: string) {\n    this._parentMessage = message;\n  }\n  setChildMessageWithService(message: string) {\n    this._childMessage = message;\n  }\n\n  setChildMessage(message: string) {\n    this._childMessage$.next(message);\n  }\n  setParentMessage(message: string) {\n    this._parentMessage$.next(message);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}