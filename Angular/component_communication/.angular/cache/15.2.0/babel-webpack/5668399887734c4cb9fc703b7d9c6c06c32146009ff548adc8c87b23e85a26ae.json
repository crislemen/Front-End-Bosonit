{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../components.service\";\nexport class ChildComponent {\n  set parentMessage(value) {\n    this._parentMessage = value;\n    this.message = value;\n  }\n  constructor(componentsService) {\n    this.componentsService = componentsService;\n    this._parentMessage = '';\n    this.onChildSendMessage = new EventEmitter();\n    this.message = '';\n  }\n  ngOnInit() {\n    this.parentMessageObservable$ = this.componentsService.parentMessageObservable$;\n    this.parentMessageObservable$.subscribe(msg => this.message = msg);\n  }\n  getParentMessageWithService() {\n    return this.componentsService.getParentMessageWithService();\n  }\n  setChildMessageWithOutput() {\n    this.onChildSendMessage.emit('child using output event');\n  }\n  setChildMessageWithService() {\n    this.componentsService.setChildMessageWithService('child using service');\n  }\n  setChildMessageWithObservable() {\n    this.componentsService.setChildMessage('child using observable');\n  }\n}\nChildComponent.ɵfac = function ChildComponent_Factory(t) {\n  return new (t || ChildComponent)(i0.ɵɵdirectiveInject(i1.ComponentsService));\n};\nChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChildComponent,\n  selectors: [[\"app-child\"]],\n  inputs: {\n    parentMessage: \"parentMessage\"\n  },\n  outputs: {\n    onChildSendMessage: \"onChildSendMessage\"\n  },\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"wrapper-child\"], [3, \"click\"]],\n  template: function ChildComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"child\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"P\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ChildComponent_Template_button_click_11_listener() {\n        return ctx.setChildMessageWithService();\n      });\n      i0.ɵɵtext(12, \"use service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ChildComponent_Template_button_click_13_listener() {\n        return ctx.setChildMessageWithOutput();\n      });\n      i0.ɵɵtext(14, \"use output property\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ChildComponent_Template_button_click_15_listener() {\n        return ctx.setChildMessageWithObservable();\n      });\n      i0.ɵɵtext(16, \"use observable\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Using SERVICE: \", ctx.getParentMessageWithService(), \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Using OUTPUT: \", ctx.message, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Using Observable: \", ctx.message, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Trying to print in one variable: \", ctx.message, \"\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,YAAY,QAAQ,eAAe;;;AASzD,OAAM,MAAOC,cAAc;EAEzB,IAAaC,aAAa,CAACC,KAAU;IACnC,IAAI,CAACC,cAAc,GAAGD,KAAK;IAC3B,IAAI,CAACE,OAAO,GAAGF,KAAK;EACtB;EAOAG,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAX7B,mBAAc,GAAW,EAAE;IAMnC,uBAAkB,GAAyB,IAAIP,YAAY,EAAU;IAErE,YAAO,GAAW,EAAE;EAGuC;EAE3DQ,QAAQ;IACN,IAAI,CAACC,wBAAwB,GAC3B,IAAI,CAACF,iBAAiB,CAACE,wBAAwB;IACjD,IAAI,CAACA,wBAAwB,CAACC,SAAS,CAAEC,GAAG,IAAM,IAAI,CAACN,OAAO,GAAGM,GAAI,CAAC;EACxE;EAEAC,2BAA2B;IACzB,OAAO,IAAI,CAACL,iBAAiB,CAACK,2BAA2B,EAAE;EAC7D;EAEAC,yBAAyB;IACvB,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,0BAA0B,CAAC;EAC1D;EAEAC,0BAA0B;IACxB,IAAI,CAACT,iBAAiB,CAACS,0BAA0B,CAAC,qBAAqB,CAAC;EAC1E;EAEAC,6BAA6B;IAC3B,IAAI,CAACV,iBAAiB,CAACW,eAAe,CAAC,wBAAwB,CAAC;EAClE;;AAlCWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;IAAAlB;EAAA;EAAAmB;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAA2B;MACnBA,qBAAK;MAAAA,iBAAK;MACdA,yBAAG;MAAAA,YAAkD;MAAAA,iBAAI;MACzDA,yBAAG;MAAAA,YAA2B;MAAAA,iBAAI;MAClCA,yBAAG;MAAAA,YAA+B;MAAAA,iBAAI;MACtCA,yBAAG;MAAAA,aAA8C;MAAAA,iBAAI;MACrDA,kCAA+C;MAAvCA;QAAA,OAASC,gCAA4B;MAAA,EAAC;MAACD,4BAAW;MAAAA,iBAAS;MACnEA,kCAA8C;MAAtCA;QAAA,OAASC,+BAA2B;MAAA,EAAC;MAACD,oCAAmB;MAAAA,iBAAS;MAC1EA,kCAAkD;MAA1CA;QAAA,OAASC,mCAA+B;MAAA,EAAC;MAACD,+BAAc;MAAAA,iBAAS;;;MANtEA,eAAkD;MAAlDA,+EAAkD;MAClDA,eAA2B;MAA3BA,wDAA2B;MAC3BA,eAA+B;MAA/BA,4DAA+B;MAC/BA,eAA8C;MAA9CA,2EAA8C","names":["EventEmitter","ChildComponent","parentMessage","value","_parentMessage","message","constructor","componentsService","ngOnInit","parentMessageObservable$","subscribe","msg","getParentMessageWithService","setChildMessageWithOutput","onChildSendMessage","emit","setChildMessageWithService","setChildMessageWithObservable","setChildMessage","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\crisl\\Desktop\\component_communication\\src\\app\\components\\child\\child.component.ts","C:\\Users\\crisl\\Desktop\\component_communication\\src\\app\\components\\child\\child.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Input,Output,EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ComponentsService } from '../components.service';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent {\n  private _parentMessage: string = '';\n  @Input() set parentMessage(value: any) {\n    this._parentMessage = value;\n    this.message = value;\n  }\n  @Output()\n  onChildSendMessage: EventEmitter<string> = new EventEmitter<string>();\n\n  message: string = '';\n  parentMessageObservable$!: Observable<string>;\n\n  constructor(private componentsService: ComponentsService) {}\n\n  ngOnInit(): void {\n    this.parentMessageObservable$ =\n      this.componentsService.parentMessageObservable$;\n    this.parentMessageObservable$.subscribe((msg) => (this.message = msg));\n  }\n\n  getParentMessageWithService() {\n    return this.componentsService.getParentMessageWithService();\n  }\n\n  setChildMessageWithOutput() {\n    this.onChildSendMessage.emit('child using output event');\n  }\n\n  setChildMessageWithService() {\n    this.componentsService.setChildMessageWithService('child using service');\n  }\n\n  setChildMessageWithObservable() {\n    this.componentsService.setChildMessage('child using observable');\n  }\n}\n","<div class=\"wrapper-child\">\n    <h2>child</h2>\n    <p>Using SERVICE: {{ getParentMessageWithService() }}</p>\n    <p>Using OUTPUT: {{ message }}</p>\n    <P>Using Observable: {{ message }}</P>\n    <p>Trying to print in one variable: {{ message }}</p>\n    <button (click)=\"setChildMessageWithService()\">use service</button>\n    <button (click)=\"setChildMessageWithOutput()\">use output property</button>\n    <button (click)=\"setChildMessageWithObservable()\">use observable</button>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}